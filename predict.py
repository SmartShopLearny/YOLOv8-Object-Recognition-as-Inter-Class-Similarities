# -*- coding: utf-8 -*-
"""predict.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TJq0mFHAShf7_j5o6i5xjb25TNN32Pxy
"""

import os
import glob
from IPython.display import Image, display

def perform_object_detection(model_name, source_folder, predict_folder):
    # Clone repository and navigate to yolov8 directory
    os.system('git clone https://github.com/SmartShopLearny/YOLOv8-Object-Recognition-as-Inter-Class-Similarities.git')
    os.chdir('YOLOv8-Object-Recognition-as-Inter-Class-Similarities')

    # Download model weights
    os.system(f'curl -H "Authorization: token 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" -L -o {model_name} https://github.com/SmartShopLearny/YOLOv8-Object-Recognition-as-Inter-Class-Similarities/raw/main/{model_name}')
    # Replace the token with your valid token

    # Run object detection task
    os.system(f'python detect.py --weights {model_name} --source {source_folder} --save-txt --save-conf --img-size 640')

    # Display Image Predictions
    for image_path in glob.glob(os.path.join(predict_folder, '*.jpg'))[:3]:
        display(Image(filename=image_path, width=600))
        print("\n")

# Example usage of the function
model = 'yolov8-smartshop-brand.pt'
source = 'image_folder'
predict_result = 'predict_folder'

perform_object_detection(model, source, predict_result)

# Commented out IPython magic to ensure Python compatibility.
# %load_ext tensorboard

!mkdir logs

with open('/content/logs/experiment_logs_Oct09_22_05_52.txt', 'r') as log_file:
    log_data = log_file.read()

# Commented out IPython magic to ensure Python compatibility.
# %tensorboard --logdir logs